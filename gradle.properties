# Disables automatic generation of the BuildConfig.java file containing build constants
android.defaults.buildfeatures.buildconfig=false

# Generates the BuildConfig file as bytecode instead of Java source code, improving build performance
android.enableBuildConfigAsBytecode=true

# Allows resource IDs to be non-final, facilitating runtime resource modification techniques
android.nonFinalResIds=true

# Disables transitive generation of the R class, reducing build time by limiting resource visibility to its own module
android.nonTransitiveRClass=true

# Forces the migration of support libraries to their AndroidX equivalents, ensuring compatibility with modern Android libraries
android.useAndroidX=true

# Enables automatic instrumentation of Firebase Performance Monitoring to track app performance
firebasePerformanceInstrumentationEnabled=true

# Sets the official Kotlin code style as the standard for code formatting
kotlin.code.style=official

# Enables incremental compilation in Kotlin, improving build times by recompiling only changes
kotlin.incremental=true

# Activates incremental compilation for Kotlin Symbol Processing (KSP), optimizing annotation processing
ksp.incremental=true

# Enables Gradle build cache to store and reuse build task outputs, reducing build times for future builds
org.gradle.caching=true

# Activates Gradle configuration cache, improving performance by reusing build configuration between runs
org.gradle.configuration-cache=true

# Enables configure-on-demand in Gradle, configuring only the projects necessary for the requested task
org.gradle.configureondemand=true

# Uses the Gradle daemon to keep a background process running, speeding up subsequent builds
org.gradle.daemon=true

# Configures JVM arguments for Gradle, allocating up to 8192 MB of memory and setting file encoding to UTF-8
org.gradle.jvmargs=-Xmx8192m -Dfile.encoding=UTF-8

# Enables parallel execution in Gradle, allowing multiple tasks to run simultaneously to reduce overall build time
org.gradle.parallel=true
